name: UI and NSD Build Pipeline

on:
  push:
    branches:
      - main
      - master
  pull_request:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  checkout:
    name: Checkout Repository
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

  cache-npm:
    name: Cache NPM
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - uses: actions/cache@v4
        with:
          path: .npm/
          key: ${{ github.ref_name }}

  lint-ui:
    name: Lint UI
    runs-on: ubuntu-latest
    needs: cache-npm
    steps:
      - run: |
          cd ui
          npm ci --cache ../.npm --prefer-offline
          npm run lint

  test-ui:
    name: Test UI
    runs-on: ubuntu-latest
    needs: cache-npm
    steps:
      - run: |
          cd ui
          npm ci --cache ../.npm --prefer-offline
          npm run test
      - name: Upload Test Coverage
        uses: actions/upload-artifact@v4
        with:
          name: cobertura-coverage
          path: ui/coverage/cobertura-coverage.xml

  prebuild-ui:
    name: Prebuild UI
    runs-on: ubuntu-latest
    needs: test-ui
    steps:
      - run: |
          cd ui
          npm ci --cache ../.npm --prefer-offline
          npm run build
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ui-dist
          path: ui/dist/

  license-check-ui:
    name: License Check UI
    runs-on: ubuntu-latest
    needs: prebuild-ui
    steps:
      - run: |
          cd ui
          npm ci --cache ../.npm --prefer-offline
          npm run license:scan
      - name: Upload License File
        uses: actions/upload-artifact@v4
        with:
          name: third-party-licenses
          path: ui/THIRD-PARTY.txt

  build-ui:
    name: Build Docker Image UI
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    container:
      image: gcr.io/kaniko-project/executor:v1.9.0-debug
      options: --entrypoint ""
    steps:
      - name: Build UI Docker Image
        run: |
          mkdir -p /kaniko/.docker
          echo "{\"auths\":{\"${{ secrets.HARBOR_HOST }}\":{\"auth\":\"$(echo -n ${{ secrets.HARBOR_USERNAME }}:${{ secrets.HARBOR_PASSWORD }} | base64)\"}}}" > /kaniko/.docker/config.json
          /kaniko/executor --context ui --dockerfile ui/Dockerfile --cache=true --cache-ttl=24h --destination ${{ secrets.HARBOR_HOST }}/${{ secrets.HARBOR_PROJECT }}/${{ github.event.repository.name }}-ui:${{ github.ref_name }}

  release-build-ui:
    name: Release Build Docker Image UI
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    container:
      image: gcr.io/kaniko-project/executor:v1.9.0-debug
      options: --entrypoint ""
    steps:
      - name: Release UI Docker Image
        run: |
          mkdir -p /kaniko/.docker
          echo "{\"auths\":{\"${{ secrets.HARBOR_HOST }}\":{\"auth\":\"$(echo -n ${{ secrets.HARBOR_USERNAME }}:${{ secrets.HARBOR_PASSWORD }} | base64)\"}}}" > /kaniko/.docker/config.json
          /kaniko/executor --context ui --dockerfile ui/Dockerfile --cache=true --cache-ttl=24h --destination ${{ secrets.HARBOR_HOST }}/${{ secrets.HARBOR_PROJECT }}/${{ github.event.repository.name }}-ui:${{ github.ref_name }}

  build-nsd:
    name: Build Docker Image NSD
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    container:
      image: gcr.io/kaniko-project/executor:v1.9.0-debug
      options: --entrypoint ""
    steps:
      - name: Build NSD Docker Image
        run: |
          mkdir -p /kaniko/.docker
          echo "{\"auths\":{\"${{ secrets.HARBOR_HOST }}\":{\"auth\":\"$(echo -n ${{ secrets.HARBOR_USERNAME }}:${{ secrets.HARBOR_PASSWORD }} | base64)\"}}}" > /kaniko/.docker/config.json
          /kaniko/executor --context . --dockerfile Dockerfile --cache=true --cache-ttl=24h --destination ${{ secrets.HARBOR_HOST }}/${{ secrets.HARBOR_PROJECT }}/${{ github.event.repository.name }}-nsd:${{ github.ref_name }}

  release-build-nsd:
    name: Release Build Docker Image NSD
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    container:
      image: gcr.io/kaniko-project/executor:v1.9.0-debug
      options: --entrypoint ""
    steps:
      - name: Release NSD Docker Image
        run: |
          mkdir -p /kaniko/.docker
          echo "{\"auths\":{\"${{ secrets.HARBOR_HOST }}\":{\"auth\":\"$(echo -n ${{ secrets.HARBOR_USERNAME }}:${{ secrets.HARBOR_PASSWORD }} | base64)\"}}}" > /kaniko/.docker/config.json
          /kaniko/executor --context . --dockerfile Dockerfile --cache=true --cache-ttl=24h --destination ${{ secrets.HARBOR_HOST }}/${{ secrets.HARBOR_PROJECT }}/${{ github.event.repository.name }}-nsd:${{ github.ref_name }}
